@model IEnumerable<Business.DTOs.InternshipDiaryDtos.InternshipDiaryDTO>

@{
    ViewData["Title"] = "Danışman Paneli";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2 class="mb-0">
                    <i class="fas fa-clipboard-check me-2 text-primary"></i>
                    Onay Bekleyen Staj Günlükleri
                </h2>
                <div class="d-flex gap-2">
                    <span class="badge bg-warning fs-6">
                        @Model.Count(x => x.ApprovalStatus == Core.Enums.InternshipStatus.Pending) Beklemede
                    </span>
                </div>
            </div>

            @if (TempData["Success"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    <i class="fas fa-check-circle me-2"></i>
                    @TempData["Success"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            @if (TempData["Error"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    <i class="fas fa-exclamation-circle me-2"></i>
                    @TempData["Error"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            <!-- Filtre Kartları -->
            <div class="row mb-4">
                <div class="col-md-3">
                    <div class="card bg-warning text-white">
                        <div class="card-body text-center">
                            <i class="fas fa-clock fa-2x mb-2"></i>
                            <h4>@Model.Count(x => x.ApprovalStatus == Core.Enums.InternshipStatus.Pending)</h4>
                            <small>Bekleyen</small>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card bg-success text-white">
                        <div class="card-body text-center">
                            <i class="fas fa-check fa-2x mb-2"></i>
                            <h4>@Model.Count(x => x.ApprovalStatus == Core.Enums.InternshipStatus.Approved)</h4>
                            <small>Onaylanan</small>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card bg-danger text-white">
                        <div class="card-body text-center">
                            <i class="fas fa-times fa-2x mb-2"></i>
                            <h4>@Model.Count(x => x.ApprovalStatus == Core.Enums.InternshipStatus.Rejected)</h4>
                            <small>Reddedilen</small>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card bg-info text-white">
                        <div class="card-body text-center">
                            <i class="fas fa-calendar fa-2x mb-2"></i>
                            <h4>@Model.Count()</h4>
                            <small>Toplam</small>
                        </div>
                    </div>
                </div>
            </div>

            <div class="card shadow">
                <div class="card-body">
                    @if (Model.Any())
                    {
                        <!-- Filtre Seçenekleri -->
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <div class="btn-group" role="group" aria-label="Durum Filtreleri">
                                    <input type="radio" class="btn-check" name="statusFilter" id="filterAll" value="all" checked>
                                    <label class="btn btn-outline-primary" for="filterAll">Tümü</label>

                                    <input type="radio" class="btn-check" name="statusFilter" id="filterPending" value="pending">
                                    <label class="btn btn-outline-warning" for="filterPending">Bekleyen</label>

                                    <input type="radio" class="btn-check" name="statusFilter" id="filterApproved" value="approved">
                                    <label class="btn btn-outline-success" for="filterApproved">Onaylanan</label>

                                    <input type="radio" class="btn-check" name="statusFilter" id="filterRejected" value="rejected">
                                    <label class="btn btn-outline-danger" for="filterRejected">Reddedilen</label>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <input type="text" id="searchInput" class="form-control" placeholder="Öğrenci adı veya yapılan iş ara...">
                            </div>
                        </div>

                        <div class="table-responsive">
                            <table class="table table-hover" id="diariesTable">
                                <thead class="table-dark">
                                    <tr>
                                        <th>
                                            <i class="fas fa-user me-1"></i>
                                            Öğrenci
                                        </th>
                                        <th>
                                            <i class="fas fa-calendar me-1"></i>
                                            Tarih
                                        </th>
                                        <th>
                                            <i class="fas fa-clock me-1"></i>
                                            Süre
                                        </th>
                                        <th>
                                            <i class="fas fa-tasks me-1"></i>
                                            Yapılan İş
                                        </th>
                                        <th>
                                            <i class="fas fa-info-circle me-1"></i>
                                            Durum
                                        </th>
                                        <th class="text-center">
                                            <i class="fas fa-cogs me-1"></i>
                                            İşlemler
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var diary in Model.OrderByDescending(x => x.Date))
                                    {
                                        <tr data-status="@diary.ApprovalStatus.ToString().ToLower()" 
                                            data-student="@diary.StudentName.ToLower()" 
                                            data-work="@diary.WorkDone.ToLower()">
                                            <td>
                                                <div class="d-flex align-items-center">
                                                    <div class="avatar-sm rounded-circle bg-primary text-white me-2 d-flex align-items-center justify-content-center">
                                                        @diary.StudentName.Substring(0, 1).ToUpper()
                                                    </div>
                                                    <div>
                                                        <strong>@diary.StudentName</strong>
                                                        <br>
                                                        <small class="text-muted">@diary.StudentNumber</small>
                                                    </div>
                                                </div>
                                            </td>
                                            <td>
                                                <strong>@diary.Date.ToString("dd.MM.yyyy")</strong>
                                                <br>
                                                <small class="text-muted">@diary.Date.ToString("dddd")</small>
                                            </td>
                                            <td>
                                                <span class="badge bg-info">@diary.WorkHours</span>
                                            </td>
                                            <td>
                                                <div style="max-width: 300px;">
                                                    @if (diary.WorkDone.Length > 50)
                                                    {
                                                        <span title="@diary.WorkDone">
                                                            @diary.WorkDone.Substring(0, 50)...
                                                        </span>
                                                    }
                                                    else
                                                    {
                                                        @diary.WorkDone
                                                    }
                                                </div>
                                            </td>
                                            <td>
                                                @if (diary.ApprovalStatus == Core.Enums.InternshipStatus.Pending)
                                                {
                                                    <span class="badge bg-warning">
                                                        <i class="fas fa-clock me-1"></i>
                                                        Beklemede
                                                    </span>
                                                }
                                                else if (diary.ApprovalStatus == Core.Enums.InternshipStatus.Approved)
                                                {
                                                    <span class="badge bg-success">
                                                        <i class="fas fa-check me-1"></i>
                                                        Onaylandı
                                                    </span>
                                                }
                                                else
                                                {
                                                    <span class="badge bg-danger">
                                                        <i class="fas fa-times me-1"></i>
                                                        Reddedildi
                                                    </span>
                                                }
                                            </td>
                                            <td class="text-center">
                                                <div class="btn-group" role="group">
                                                    <button type="button" class="btn btn-sm btn-info" 
                                                            data-bs-toggle="modal" 
                                                            data-bs-target="#diaryModal@(diary.Id)"
                                                            title="Detayları Görüntüle">
                                                        <i class="fas fa-eye"></i>
                                                    </button>
                                                    
                                                    @if (diary.ApprovalStatus == Core.Enums.InternshipStatus.Pending)
                                                    {
                                                        <a asp-action="ReviewDiary" asp-route-id="@diary.Id"
                                                           class="btn btn-sm btn-primary"
                                                           title="Onay/Red">
                                                            <i class="fas fa-gavel"></i>
                                                        </a>
                                                    }
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <i class="fas fa-clipboard-list fa-3x text-muted mb-3"></i>
                            <h4 class="text-muted">Henüz günlük kaydı yok</h4>
                            <p class="text-muted">Öğrenciler staj günlüklerini yazdıkça burada görünecektir.</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal'lar -->
@foreach (var diary in Model)
{
    <div class="modal fade" id="diaryModal@(diary.Id)" tabindex="-1">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">
                        <i class="fas fa-book me-2"></i>
                        Günlük Detayı - @diary.StudentName
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <strong>Öğrenci:</strong> @diary.StudentName (@diary.StudentNumber)
                        </div>
                        <div class="col-md-6">
                            <strong>Tarih:</strong> @diary.Date.ToString("dd.MM.yyyy")
                        </div>
                    </div>
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <strong>Çalışma Saatleri:</strong> @diary.WorkHours
                        </div>
                        <div class="col-md-6">
                            <strong>Durum:</strong>
                            @if (diary.ApprovalStatus == Core.Enums.InternshipStatus.Approved)
                            {
                                <span class="badge bg-success ms-1">Onaylandı</span>
                            }
                            else if (diary.ApprovalStatus == Core.Enums.InternshipStatus.Rejected)
                            {
                                <span class="badge bg-danger ms-1">Reddedildi</span>
                            }
                            else
                            {
                                <span class="badge bg-warning ms-1">Beklemede</span>
                            }
                        </div>
                    </div>
                    <hr>
                    <div class="mb-3">
                        <strong>Yapılan Çalışma:</strong>
                        <p class="mt-2 border p-3 rounded bg-light">@diary.WorkDone</p>
                    </div>
                    <div class="mb-3">
                        <strong>Detaylı Açıklama:</strong>
                        <p class="mt-2 border p-3 rounded bg-light">@diary.Description</p>
                    </div>
                    
                    @if (diary.ApprovalStatus == Core.Enums.InternshipStatus.Rejected && !string.IsNullOrEmpty(diary.RejectionReason))
                    {
                        <div class="alert alert-danger">
                            <strong>Red Sebebi:</strong> @diary.RejectionReason
                        </div>
                    }
                    
                    @if (diary.ApprovalStatus == Core.Enums.InternshipStatus.Approved)
                    {
                        <div class="alert alert-success">
                            <small>
                                <strong>Onaylayan:</strong> @diary.ApprovedByAdvisorName<br>
                                <strong>Onay Tarihi:</strong> @diary.ApprovedDate?.ToString("dd.MM.yyyy HH:mm")
                            </small>
                        </div>
                    }
                </div>
                <div class="modal-footer">
                    @if (diary.ApprovalStatus == Core.Enums.InternshipStatus.Pending)
                    {
                        <a asp-action="ReviewDiary" asp-route-id="@diary.Id" class="btn btn-primary">
                            <i class="fas fa-gavel me-1"></i>
                            Değerlendir
                        </a>
                    }
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Kapat</button>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const statusFilters = document.querySelectorAll('input[name="statusFilter"]');
            const searchInput = document.getElementById('searchInput');
            const tableRows = document.querySelectorAll('#diariesTable tbody tr');

            function filterTable() {
                const selectedStatus = document.querySelector('input[name="statusFilter"]:checked').value;
                const searchTerm = searchInput.value.toLowerCase();

                tableRows.forEach(row => {
                    const status = row.getAttribute('data-status');
                    const student = row.getAttribute('data-student');
                    const work = row.getAttribute('data-work');

                    let statusMatch = selectedStatus === 'all' || status === selectedStatus;
                    let searchMatch = searchTerm === '' || 
                                    student.includes(searchTerm) || 
                                    work.includes(searchTerm);

                    if (statusMatch && searchMatch) {
                        row.style.display = '';
                    } else {
                        row.style.display = 'none';
                    }
                });
            }

            statusFilters.forEach(filter => {
                filter.addEventListener('change', filterTable);
            });

            searchInput.addEventListener('input', filterTable);
        });
    </script>
} 